spring.application.name=OfferBrowserPrototype

# W??czanie/wy??czanie cache Redis
spring.cache.type=redis

# Konfiguracja czasu wyga?ni?cia cache'a (przyk?adowo 10 minut)
offer.cache.expiration=10

# Redis configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379

# MongoDB configuration
spring.data.mongodb.uri=mongodb://admin:admin123@localhost:27017/offer_browser_db?authSource=admin



# Exclude autoconfiguration classes
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

# Server configuration
server.port=8080

# Logging configuration
logging.level.org.springframework.data.mongodb.core=DEBUG

# JWT configuration
#jwt.secret=your_secret_key_here
#jwt.expiration=86400000  # Czas wa?no?ci tokenu JWT w milisekundach (np. 1 dzie?)
#jwt.issuer=your_app_name_here  # Opcjonalnie, mo?esz poda? swoj? aplikacj? jako "issuer"

# SpringDoc configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.packages-to-scan=com.example.offerbrowserprototype.infrastructure.web,com.example.userbridge.infrastructure.api

# Swagger address and properties
http://localhost:8080/swagger-ui.html


provider.one.api.url=https://api.providerone.com/job-offers
provider.two.api.url=https://api.providertwo.com/job-offers

# Harmonogramowanie zada?
spring.scheduling.enabled=true

# Cron expression for scheduled fetching of job offers (default: every hour at minute 0)
job.offer.fetch.cron=0 0 * * * *


# Spring Mail Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=userbridge9@gmail.com
spring.mail.password=mnuv bxzq bvla oieg
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Kontrola w??czania i wy??czania harmonogramu pobierania ofert
job.offer.scheduler.enabled=true


jwt.secret=J6HsD3l^0Z8fS7vG9pQ2X!s3R@wE5m#tYbN4cU8eK1zM&lV
jwt.issuer=offer-browser-prototype
jwt.expiration-time-ms=3600000


spring.jackson.time-zone=UTC